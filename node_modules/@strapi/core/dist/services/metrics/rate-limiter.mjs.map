{"version":3,"file":"rate-limiter.mjs","sources":["../../../src/services/metrics/rate-limiter.ts"],"sourcesContent":["import type { Sender } from './sender';\n\ninterface Options {\n  limitedEvents?: string[];\n}\n\ntype TailParams<T extends (...args: any[]) => any> =\n  Parameters<T> extends [unknown, ...infer U] ? U : never;\n\nfunction nextResetDate(): number {\n  return Date.now() + 24 * 60 * 60 * 1000; // Now + 24 hours.\n}\n\nexport default (sender: Sender, { limitedEvents = [] }: Options = {}) => {\n  let cacheExpiresAt = nextResetDate();\n  const eventCache = new Map();\n\n  return async (event: string, ...args: TailParams<Sender>) => {\n    if (!limitedEvents.includes(event)) {\n      return sender(event, ...args);\n    }\n\n    if (Date.now() > cacheExpiresAt) {\n      eventCache.clear();\n      cacheExpiresAt = nextResetDate();\n    }\n\n    if (eventCache.has(event)) {\n      return false;\n    }\n\n    eventCache.set(event, true);\n    return sender(event, ...args);\n  };\n};\n"],"names":[],"mappings":"AASA,SAAS,gBAAwB;AAC/B,SAAO,KAAK,IAAQ,IAAA,KAAK,KAAK,KAAK;AACrC;AAEA,MAAe,oBAAA,CAAC,QAAgB,EAAE,gBAAgB,CAAG,EAAA,IAAa,CAAA,MAAO;AACvE,MAAI,iBAAiB,cAAc;AAC7B,QAAA,iCAAiB,IAAI;AAEpB,SAAA,OAAO,UAAkB,SAA6B;AAC3D,QAAI,CAAC,cAAc,SAAS,KAAK,GAAG;AAC3B,aAAA,OAAO,OAAO,GAAG,IAAI;AAAA,IAAA;AAG1B,QAAA,KAAK,IAAI,IAAI,gBAAgB;AAC/B,iBAAW,MAAM;AACjB,uBAAiB,cAAc;AAAA,IAAA;AAG7B,QAAA,WAAW,IAAI,KAAK,GAAG;AAClB,aAAA;AAAA,IAAA;AAGE,eAAA,IAAI,OAAO,IAAI;AACnB,WAAA,OAAO,OAAO,GAAG,IAAI;AAAA,EAC9B;AACF;"}